-- MySQL
--  Details of all cars purchased in the year 2022:

SELECT 
    * 
FROM cars
JOIN sales
    ON cars.car_id = sales.car_id
WHERE YEAR(purchase_date) = 2022;

-- Total number of cars sold by each salesperson:

SELECT 
    name AS "Salesperson"
  , COUNT(sale_id) AS "Total Sales" 
FROM sales
JOIN salespersons
    ON salespersons.salesman_id = sales.salesman_id
GROUP BY name;

-- Total revenue generated by each salesperson, in order of descending total revenue:

SELECT 
    salespersons.name
  , SUM(cars.cost_$) AS total_revenue 
FROM cars
JOIN sales 
    ON cars.car_id = sales.car_id
JOIN salespersons 
    ON salespersons.salesman_id = sales.salesman_id
GROUP BY salespersons.name
ORDER BY total_revenue DESC;

-- Ranks salespersons by total revenue, provides the ranking in the output.

SELECT
    salespersons.name AS "Salesperson"
  , SUM(cars.cost_$) AS "Total Revenue"
  , RANK() OVER (ORDER BY SUM(cars.cost_$) DESC) AS "Rank"
FROM sales
JOIN cars 
    ON cars.car_id = sales.car_id
JOIN salespersons 
    ON salespersons.salesman_id = sales.salesman_id
GROUP BY salespersons.name
ORDER BY "Rank";

-- Calculates the percentage contribution of each car's revenue to total revenue for each salesperson

SELECT
    salespersons.name AS "Salesperson"
  , CONCAT(cars.make," ", cars.type) AS "Car Model"
  , cars.cost_$ AS "Car Revenue"
  , SUM(cars.cost_$) OVER (PARTITION BY salespersons.salesman_id) AS "Total Revenue"
  , (cars.cost_$ / SUM(cars.cost_$) OVER (PARTITION BY salespersons.salesman_id)) * 100.0 AS "Percentage Contribution"
FROM sales
JOIN cars 
    ON cars.car_id = sales.car_id
JOIN salespersons 
    ON salespersons.salesman_id = sales.salesman_id
ORDER BY salespersons.salesman_id, cars.cost_$ DESC;

-- Total revenue generated by each car model:

SELECT 
    cars.type
  , SUM(cost_$) AS total_revenue 
FROM cars
GROUP BY cars.type
ORDER BY total_revenue DESC;

-- Ranks Make of Car by Total Revenue, includes output of ranking

SELECT
    cars.make AS "Make of Car"
  , SUM(cars.cost_$) AS "Total Revenue"
  , RANK() OVER (ORDER BY SUM(cars.cost_$) DESC) AS "Rank"
FROM sales
JOIN cars 
    ON cars.car_id = sales.car_id
GROUP BY cars.make
ORDER BY "Rank";

-- Total revenue generated by the sales of hatchback cars:

SELECT 
    style
  , SUM(cost_$) AS total_revenue 
FROM cars
JOIN sales 
    ON cars.car_id = sales.car_id
JOIN salespersons 
    ON salespersons.salesman_id = sales.salesman_id
WHERE style = "Hatchback";

-- Name and city of the salesperson who sold the most number of cars in the year 2023:

SELECT 
    salespersons.name
  , salespersons.city
  , COUNT(sales.sale_id) AS total_sales 
FROM sales
JOIN salespersons 
    ON salespersons.salesman_id = sales.salesman_id
WHERE YEAR(sales.purchase_date) = 2023
GROUP BY salespersons.name, salespersons.city
ORDER BY total_sales DESC LIMIT 1;







